@page "/snippet/{snippetId?}"
@layout MainLayout

<style>
    .mud-drawer-mini {
    z-index: calc(var(--mud-zindex-drawer) + 1);
    }

    .drawer-examples.mud-drawer--open {
    left: calc(var(--mud-drawer-width-mini-left) + 2px) !important;
    }

    .dock-padding {
    padding-left: var(--mud-drawer-width, var(--mud-drawer-width-left));
    }
</style>
<div class="@($"{(_dockExamples ? "try-layout dock-padding" : "try-layout")}")">
    <MudDrawer Fixed="false" Elevation="1" Variant="@DrawerVariant.Mini" Class="try-drawer">
        <MudIconButton title="Run (Ctrl + S)" OnClick="@CompileAsync" Disabled="@Loading" Icon="@Icons.Material.Rounded.PlayArrow" Color="@(LayoutService.IsDarkMode ? Color.Success : Color.Inherit)" />
        <MudTooltip Text="Save or Share" Delay="800" Arrow="true" Placement="Placement.Right" Color="Color.Dark">
            <SaveSnippetPopup @bind-Visible="SaveSnippetPopupVisible" CodeFiles="@CodeFiles.Values" UpdateActiveCodeFileContentAction="UpdateActiveCodeFileContent" />
            <MudIconButton OnClick="ShowSaveSnippetPopup" Icon="@Icons.Material.Outlined.Save" Color="@(LayoutService.IsDarkMode ? Color.Info : Color.Inherit)" />
        </MudTooltip>
        <MudTooltip Text="Doc Examples" Delay="800" Arrow Placement="Placement.Right" Color="Color.Dark">
            <MudIconButton OnClick="@ToggleExamples" Icon="@Icons.Material.Filled.SettingsInputComponent" Color="@(LayoutService.IsDarkMode ? Color.Info : Color.Inherit)" />
        </MudTooltip>
        <MudTooltip Text="@(LayoutService.IsDarkMode ? "Switch to Light Theme" : "Switch to Dark Theme")" Delay="800" Arrow="true" Placement="Placement.Right" Color="Color.Dark">
            <MudIconButton OnClick="@UpdateTheme" Icon="@(LayoutService.IsDarkMode ? @Icons.Material.Rounded.LightMode : @Icons.Material.Outlined.DarkMode)" Color="@(LayoutService.IsDarkMode ? Color.Warning : Color.Inherit)" />
        </MudTooltip>
        <MudSpacer />
        <MudStack Class="mb-12" AlignItems="AlignItems.Center" Justify="Justify.Center">
            <MudAvatar Color="Color.Info" Size="Size.Small" Class="my-auto">T</MudAvatar>
            <MudAvatar Color="Color.Info" Size="Size.Small" Class="my-auto">R</MudAvatar>
            <MudAvatar Color="Color.Info" Size="Size.Small" Class="my-auto">Y</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">M</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">U</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">D</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">B</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">L</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">A</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">Z</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">O</MudAvatar>
            <MudAvatar Color="Color.Error" Size="Size.Small" Class="my-auto">R</MudAvatar>
        </MudStack>
    </MudDrawer>
    <MudDrawer @bind-Open="@_examplesOpen" Anchor="Anchor.Start" ClipMode="DrawerClipMode.Docked" Variant="DrawerVariant.Persistent" OverlayAutoClose="@(_dockExamples ? false : true)" Elevation="1" Class="try-drawer drawer-examples">
        <MudStack Class="pa-3" Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
            <MudText Typo="Typo.h6">Doc Examples</MudText>
            <MudIconButton Class="ma-0 pa-0"
            Icon="@(_dockExamples ? Icons.Material.Filled.ArrowLeft : Icons.Material.Filled.ArrowDropDown)"
            OnClick="@(() => _dockExamples = !_dockExamples)" />
        </MudStack>
        @if (_compList.Any())
        {
            @foreach (var main in _compList.Select(x => x.ComponentName).Distinct().ToList())
            {
                <MudPaper Elevation="1" Class="d-flex justify-space-around">
                    <MudMenu Label="@main" EndIcon="@Icons.Material.Filled.Add">
                        @foreach (var comp in _compList.Where(x => x.ComponentName == main).ToList())
                        {
                            <MudMenuItem Label="@comp.ExampleFullName" OnClick="@(() => CopyExample(comp))" />
                        }
                    </MudMenu>
                </MudPaper>
            }
        }
        else
        {
            <MudPaper Class="ma-6" Elevation="0">
                <MudSkeleton />
                <MudSkeleton SkeletonType="SkeletonType.Circle" Height="100px" />
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="100%" />
            </MudPaper>
        }
    </MudDrawer>
    <div class="try-editor">
        <MudOverlay Visible="Loading" Absolute="true" DarkBackground="true">
            <MudText Typo="Typo.h4" Class="white-text"> @LoaderText</MudText>
        </MudOverlay>
        <div id="user-code-editor-container">
            <TabManager Tabs="@CodeFileNames" OnTabActivate="@HandleTabActivate" OnTabClose="@HandleTabClose" OnTabCreate="@HandleTabCreate" />
            <CodeEditor @ref="@CodeEditorComponent" Code="@CodeEditorContent" CodeFileType="@CodeFileType" />
            <ErrorList @bind-Show="@ShowDiagnostics" Diagnostics="@Diagnostics" />
        </div>
        <div id="user-page-window-container">
            <iframe id="user-page-window" src="/user-page"></iframe>
        </div>
    </div>
    <MudAppBar Bottom="true" Fixed="true" Color="@GetBottomAppBarColor()" Elevation="0" Class="try-errorlist repl-navbar">
        <div class="try-errorlist-button d-flex align-center" @onclick="@ToggleDiagnostics">
            <MudIcon Icon="@Icons.Material.Outlined.ErrorOutline" />
            <MudText>@ErrorsCount</MudText>
            <MudIcon Icon="@Icons.Material.Outlined.WarningAmber" />
            <MudText>@WarningsCount</MudText>
            @if (ErrorsCount != 0 || WarningsCount != 0)
            {
                <MudIcon Icon="@(ShowDiagnostics ? $"{Icons.Material.Outlined.ExpandMore}" : $"{Icons.Material.Outlined.ExpandLess}")" />
            }
        </div>
        <MudSpacer />
        <MudLink Typo="Typo.body2" Class="ml-10 version-info" Color="Color.Inherit" Href="https://dotnet.microsoft.com/download" Target="_blank">.net @Environment.Version.ToString()</MudLink>
        <MudLink Typo="Typo.body2" Class="ml-5 version-info" Color="Color.Inherit" Href="https://github.com/MudBlazor/MudBlazor/releases" Target="_blank">mudblazor @Version</MudLink>
    </MudAppBar>
</div>
@code {
    public Color GetBottomAppBarColor()
    {
        if (ErrorsCount != 0)
        {
            return Color.Error;
        }
        else if (WarningsCount != 0)
        {
            return Color.Warning;
        }
        else
        {
            return Color.Inherit;
        }
    }
}