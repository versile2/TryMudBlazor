@using System.ComponentModel.DataAnnotations

<MudPopoverProvider />

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <EditForm Model="_model">
            <DataAnnotationsValidator />
            <MudAutocomplete For="@(() => _model.Value)" Label="Metasyntactic variable" @bind-Value="_model.Value" SearchFunc="@Search" />
        </EditForm>
    </MudItem>
</MudGrid>
@code {
    public static string __description__ = "Test use of data attributes accessible using `For` bound expression.";

    private readonly TestModel _model = new();

    // What does this awkward var name means ? => https://en.wikipedia.org/wiki/Metasyntactic_variable
    private readonly string[] _metasyntacticVariable = ["Foo", "Bar", "Qux", "Quux"];

    private Task<IEnumerable<string?>> Search(string value, CancellationToken token)
    {
        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return Task.FromResult<IEnumerable<string?>>(_metasyntacticVariable);

        return Task.FromResult<IEnumerable<string?>>(_metasyntacticVariable.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase)));
    }

    private class TestModel
    {
        [StringLength(3, ErrorMessage = "Should not be longer than 3")]
        public string? Value { get; set; }
    }
}